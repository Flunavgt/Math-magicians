// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Calc page 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="calcPageArea"
      >
        <div
          class="calcTitle"
        >
          <p>
            Let's do some Math!
          </p>
        </div>
        <div
          class="CalcMain"
        >
          <div
            class="calculatorMain"
          >
            <p
              class="display"
              data-testid="display"
            />
            <div
              class="KeyBoard"
            >
              <button
                class="btnPad0"
                type="button"
              >
                0
              </button>
              <button
                class="btnPad1"
                type="button"
              >
                1
              </button>
              <button
                class="btnPad2"
                type="button"
              >
                2
              </button>
              <button
                class="btnPad3"
                type="button"
              >
                3
              </button>
              <button
                class="btnPad4"
                type="button"
              >
                4
              </button>
              <button
                class="btnPad5"
                type="button"
              >
                5
              </button>
              <button
                class="btnPad6"
                type="button"
              >
                6
              </button>
              <button
                class="btnPad7"
                type="button"
              >
                7
              </button>
              <button
                class="btnPad8"
                type="button"
              >
                8
              </button>
              <button
                class="btnPad9"
                type="button"
              >
                9
              </button>
              <button
                class="btnPadAdd"
                type="button"
              >
                +
              </button>
              <button
                class="btnPadMinus"
                type="button"
              >
                -
              </button>
              <button
                class="btnPadDiv"
                type="button"
              >
                รท
              </button>
              <button
                class="btnPadMultiply"
                type="button"
              >
                x
              </button>
              <button
                class="btnPadEqual"
                type="button"
              >
                =
              </button>
              <button
                class="btnPadPercentage"
                type="button"
              >
                %
              </button>
              <button
                class="btnPadAllClear"
                type="button"
              >
                AC
              </button>
              <button
                class="btnPadMasMin"
                type="button"
              >
                +/-
              </button>
              <button
                class="btnPadDecimal"
                type="button"
              >
                .
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="calcPageArea"
    >
      <div
        class="calcTitle"
      >
        <p>
          Let's do some Math!
        </p>
      </div>
      <div
        class="CalcMain"
      >
        <div
          class="calculatorMain"
        >
          <p
            class="display"
            data-testid="display"
          />
          <div
            class="KeyBoard"
          >
            <button
              class="btnPad0"
              type="button"
            >
              0
            </button>
            <button
              class="btnPad1"
              type="button"
            >
              1
            </button>
            <button
              class="btnPad2"
              type="button"
            >
              2
            </button>
            <button
              class="btnPad3"
              type="button"
            >
              3
            </button>
            <button
              class="btnPad4"
              type="button"
            >
              4
            </button>
            <button
              class="btnPad5"
              type="button"
            >
              5
            </button>
            <button
              class="btnPad6"
              type="button"
            >
              6
            </button>
            <button
              class="btnPad7"
              type="button"
            >
              7
            </button>
            <button
              class="btnPad8"
              type="button"
            >
              8
            </button>
            <button
              class="btnPad9"
              type="button"
            >
              9
            </button>
            <button
              class="btnPadAdd"
              type="button"
            >
              +
            </button>
            <button
              class="btnPadMinus"
              type="button"
            >
              -
            </button>
            <button
              class="btnPadDiv"
              type="button"
            >
              รท
            </button>
            <button
              class="btnPadMultiply"
              type="button"
            >
              x
            </button>
            <button
              class="btnPadEqual"
              type="button"
            >
              =
            </button>
            <button
              class="btnPadPercentage"
              type="button"
            >
              %
            </button>
            <button
              class="btnPadAllClear"
              type="button"
            >
              AC
            </button>
            <button
              class="btnPadMasMin"
              type="button"
            >
              +/-
            </button>
            <button
              class="btnPadDecimal"
              type="button"
            >
              .
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Quote 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="quoteMathMag"
      >
        <p>
          Mathematics is bit about numbers, equations, computations, or algoriths: it is about understanding. - William Paul Thurston
        </p>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="quoteMathMag"
    >
      <p>
        Mathematics is bit about numbers, equations, computations, or algoriths: it is about understanding. - William Paul Thurston
      </p>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="homeTxt"
      >
        <div>
          <h2>
            Welcome to our Page
          </h2>
        </div>
        <p>
          Lorem ipsum dolor sit amet consectetur adipisicing elit. Maxime mollitia, molestiae quas vel sint commodi repudiandae consequuntur voluptatum laborum numquam blanditiis harum quisquam eius sed odit fugiat iusto fuga praesentium optio, eaque rerum! Provident similique accusantium nemo autem. Veritatis obcaecati tenetur iure eius earum ut molestias architecto voluptate aliquam nihil, eveniet aliquid culpa officia aut! Impedit sit sunt quaerat, odit, tenetur error, harum nesciunt ipsum debitis quas aliquid. Reprehenderit, quia. Quo neque error repudiandae fuga? Ipsa laudantium molestias eos sapiente officiis modi at sunt excepturi expedita sint? Sed quibusdam recusandae alias error harum maxime adipisci amet laborum. Perspiciatis
        </p>
        <p>
          Lorem ipsum dolor sit amet consectetur adipisicing elit. Maxime mollitia, molestiae quas vel sint commodi repudiandae consequuntur voluptatum laborum numquam blanditiis harum quisquam eius sed odit fugiat iusto fuga praesentium optio, eaque rerum! Provident similique accusantium nemo autem. Veritatis obcaecati tenetur iure eius earum ut molestias architecto voluptate aliquam nihil, eveniet aliquid culpa officia aut! Impedit sit sunt quaerat, odit, tenetur error, harum nesciunt ipsum debitis quas aliquid. Reprehenderit, quia. Quo neque error repudiandae fuga? Ipsa laudantium molestias eos sapiente officiis modi at sunt excepturi expedita sint? Sed quibusdam recusandae alias error harum maxime adipisci amet laborum. Perspiciatis
        </p>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="homeTxt"
    >
      <div>
        <h2>
          Welcome to our Page
        </h2>
      </div>
      <p>
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Maxime mollitia, molestiae quas vel sint commodi repudiandae consequuntur voluptatum laborum numquam blanditiis harum quisquam eius sed odit fugiat iusto fuga praesentium optio, eaque rerum! Provident similique accusantium nemo autem. Veritatis obcaecati tenetur iure eius earum ut molestias architecto voluptate aliquam nihil, eveniet aliquid culpa officia aut! Impedit sit sunt quaerat, odit, tenetur error, harum nesciunt ipsum debitis quas aliquid. Reprehenderit, quia. Quo neque error repudiandae fuga? Ipsa laudantium molestias eos sapiente officiis modi at sunt excepturi expedita sint? Sed quibusdam recusandae alias error harum maxime adipisci amet laborum. Perspiciatis
      </p>
      <p>
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Maxime mollitia, molestiae quas vel sint commodi repudiandae consequuntur voluptatum laborum numquam blanditiis harum quisquam eius sed odit fugiat iusto fuga praesentium optio, eaque rerum! Provident similique accusantium nemo autem. Veritatis obcaecati tenetur iure eius earum ut molestias architecto voluptate aliquam nihil, eveniet aliquid culpa officia aut! Impedit sit sunt quaerat, odit, tenetur error, harum nesciunt ipsum debitis quas aliquid. Reprehenderit, quia. Quo neque error repudiandae fuga? Ipsa laudantium molestias eos sapiente officiis modi at sunt excepturi expedita sint? Sed quibusdam recusandae alias error harum maxime adipisci amet laborum. Perspiciatis
      </p>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
